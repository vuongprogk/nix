(defwidget sysblock [icon onclick active label]
  (box :class "block-container"
       :orientation "v"
       :space-evenly false
       :spacing 5
    (button :class "block ${active ? 'active' : ''}" :onclick "${onclick}"
      (box :orientation "h"
           :space-evenly false
        (box :class "iconbox"
             :halign "start"
             :space-evenly true
             :orientation "h"
          (label :text "${icon}" :class "icon")
        )
        (box :class "sepbox"
             :halign "center"
             :space-evenly true
             :orientation "h"
          (box :class "sep")
        )
        (box :class "chevronbox"
             :halign "end"
             :space-evenly true
             :orientation "h"
          (label :text "")
        )
      )
    )
    (label :halign "center" :text "${label}" :class "label")
  )
)

(defwidget sysbuttons []
  (box :class "sysbuttonsbox"
       :orientation "v"
       :space-evenly false
       :spacing 20
    (box :class "firstrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${network_icon}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/network.sh toggle"
                  :active "${network_status == 'Connected' ? true : false}"
                  :label "${network_ssid}")
      )
      (box :halign "center"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${bluetooth_state == 'on' ? '' : ''}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/bluetooth toggle"
                  :active "${bluetooth_state == 'on' ? true : false}"
                  :label "Bluetooth")
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${network_radio == 'on' ? '' : ''}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/network.sh toggle-radio"
                  :active "${network_radio == 'on' ? false : true}"
                  :label "Airplane")
      )
    )
    (box :class "lastrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${redshift_state == 'on' ? '' : ''}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/redshift toggle"
                  :active "${redshift_state == 'on' ? true : false}"
                  :label "Night Light")
      )
      (box :halign "center"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${volume_icon}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/volume.sh toggle-muted"
                  :active "${is_muted == 'yes' ? false : true}"
                  :label "Volume")
      )
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${mic_status == 'yes' ? '' : ''}"
                  :onclick "~/.config/bspwm/ryan/src/eww/scripts/mic toggle"
                  :active "${mic_status == 'yes' ? true : false}"
                  :label "Microphon")
      )
    )
  )
)

(defwidget controls []
  (box :class "controlsbox"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (box :orientation "h"
         :space-evenly "false"
         :class "vol-slider"
      (box :class "vol-label"
            volume_icon
      )
      (scale :value volume_value
             :onchange "~/.config/bspwm/ryan/src/eww/scripts/volume.sh set {}"
             :min 0
             :max 101)
    )
    (box :orientation "h"
         :space-evenly "false"
         :class "br-slider"
      (box :class "br-label"
            br_icon
      )
      (scale :value br
             :onchange "~/.config/bspwm/ryan/src/eww/scripts/brightness.sh set {}"
             :min 0
             :max 101)
      )
    ;(box :orientation "h"
    ;     :space-evenly "false"
    ;     :class "br-mic"
    ;     (label :class "mic-label"
    ;           :text "${mic_status == 'yes' ? '' : ''} " :valign "center" :halign "center")
    ;     (scale :value mic
    ;           :onchange "~/.config/bspwm/ryan/src/eww/scripts/mic set {}"
    ;           :min 0
    ;           :max 101)
    ;  )  
    (box :orientation "h"
         :space-evenly "false"
        :class "stats"
         (label :tooltip "${round(EWW_CPU.avg, 0)}%" :class "stats-icon-cpu" :text "󰍛")
		 (scale :min 0 :max 101 :active false :value {EWW_CPU.avg} :class "scale-cpu")
      )
    (box :orientation "h"
         :space-evenly "false"
         :class "stats"
         (label :tooltip "${round(EWW_RAM.used_mem_perc, 0)}%" :class "stats-icon-ram" :text "󰘚")
		 (scale :min 0 :max 101 :active false :value {EWW_RAM.used_mem_perc} :class "scale-ram")
      )  
    (box :orientation "h"
         :space-evenly "false"
         :class "stats"
         (label :tooltip "${round(EWW_DISK["/"].used_perc, 0)}%" :class "stats-icon-fs" :text "󰝰")
   	      (scale :min 0 :max 101 :active false :value {(EWW_DISK["/"].used / EWW_DISK["/"].total) * 100} :class "scale-fs")
	)
  (box :orientation "h"
         :space-evenly "false"
         :class "stats"
         (label :tooltip "${round(temp, 0)}%" :class "stats-icon-temp" :text "糖")
   	      (scale :min 0 :max 101 :active false :value temp :class "scale-temp")
	)
  )
)

(defwidget musicact []
  (box :class "musicaction"
       :orientation "h"
       :space-evenly false
       :spacing 10
    (box :class "pic-con"
         :orientation "v"
         :space-evenly false
      (box :class "picimg"
           :orientation "h"
           :space-evenly true
           :style "background-image: url('${art}');")
      (box :class "left"
           :space-evenly false
           :orientation "v"
           :haligh "start"
           :spacing 4 
        (label :halign "start" :class "song" :limit-width 30 :text title)
		(label :halign "start" :class "artist" :limit-width 30 :text artist)
      )
    )
    (box :class "lasttmo"
         :orientation "v"
         :space-evenly true
      (box :class "musiccontrol"
           :orientation "v"
           :space-evenly true
        (button :valign "start" :halign "center" :class "next" :onclick "MediaControl --previous" "")
		(button :valign "center" :halign "center" :class "playpause" :onclick "MediaControl --toggle" playpause)
		(button :valign "end" :halign "center" :class "back" :onclick "MediaControl --next" "")
      )
    )
  )
)

(defwidget user []
  (box :class "userinfobox"
       :orientation "h"
       :space-evenly false
    (box :class "info"
         :space-evenly false
         :orientation "h"
         :halign "start"
         :valign "center"
         :spacing 10
      (label :text "${lithour}:${litmin}" :class "time")
      (box :class "daybox"
           :orientation "v"
           :space-evenly false
        (label :text "${shortday}" :halign "start")
        (label :text "${weekday}" :halign "start")
      )
    )
    (box :orientation "h"
         :space-evenly false
         :halign "end"
         :valign "center"
         :hexpand true
      (box :class "pfp"
           :style "background-image: url('${pfp}');"
      )  
    )
  )
)

(defwidget poweractions []
  (box :class "poweractionsbox"
       :orientation "h"
       :space-evenly true
    (box :class "buttons-container"
         :space-evenly true
         :halign "end"
         :orientation "h"
      (box :class "buttons"
           :orientation "h"
           :space-evenly true
           :halign "center" 
           :valign "center" 
           :hexpand true
           :spacing 8
        (button :class "browser"
                :onclick "openapps --browser"
                :tooltip "browser"
          "󰇧"
        )
        (button :class "filemanager"
                :onclick "openapps --filemanager"
                :tooltip "file manager"
          ""
        )
        (button :class "terminal"
                :onclick "openapps --terminal"
                :tooltip "terminal"
          ""
        )
        (button :class "texteditor"
                :onclick "openapps --nvim"
                :tooltip "text editor"
          ""
        )
        (button :class "musik"
                :onclick "openapps --music"
                :tooltip "ncmpcpp"
          ""
        )
        (button :class "telegram"
                :onclick "openapps --telegram"
                :tooltip "telegram"
          "切"
        )
      )
    )
  )
)

(defwidget utime []
  (box :class "box"
       :orientation "h"
       :space-evenly true
    (box :class "buttons-container"
         :space-evenly true
         :halign "end"
         :orientation "h"
      (box :class "buton"
           :orientation "h"
           :space-evenly true
           :halign "center" 
           :valign "center" 
           :hexpand true
           :spacing 10
        (label :text "${username}" :class "username" :halign "end")
        (label :text "${uptime}" :class "uptime" :halign "end")
      )
    )
  )
)

  
(defwidget actions []
  (box :class "actions"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (user)
    (sysbuttons)
    (musicact)
    (controls)
    (utime)
    (poweractions)
  )
)

(defwindow actions
  :geometry (geometry :x "-17px"
                      :y "50px"
                      :width "320px" ; this isn't respected btw, so it's auto-adjusted by eww lol.
                      :height "10px" ; automatically generated by eww.
                      :anchor "top right")
  :type "dock"
  :wm-ignore true
(actions))

;(box :class "user"
;           :orientation "v"
;           :space-evenly false
;        --(label :text "${username}" :class "username" :halign "start")
;        (label :text "${uptime}" :class "uptime" :halign "start")
;        )

